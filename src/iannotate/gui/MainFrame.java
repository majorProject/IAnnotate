package iannotate.gui;

import com.drew.imaging.jpeg.JpegProcessingException;
import com.drew.metadata.MetadataException;
import de.offis.faint.model.FaceDatabase;
import de.offis.faint.model.Region;
import iannotate.database.PersonWithRelation;
import iannotate.database.SearchPersonClass;
import iannotate.face.FaceDetection;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import iannotate.metadata.EXIFMetadataExtractor;
import iannotate.search.SparqlQuery;
import iannotate.utility.FileUtil;
import iannotate.utility.FormattedDate;
import iannotate.utility.WriteRdf;
import java.awt.Cursor;
import java.io.FileNotFoundException;
import java.lang.String;
import java.util.*;


/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */
/**
 *
 * @author RAJAN
 */
public class MainFrame extends javax.swing.JFrame {

    private String path = null;
    private String filename = null;
    private String faintDir = "aa";
    private String ImageDir = "image";
    private static final Random randomGenerator = new Random();
    private int faceID = 0;
//    Region regions[];
    Vector<Region> regions = new Vector<>();
    LinkedList<SearchPersonClass> list = new LinkedList<>();         //for the search list
    Region regionsManual;
    Image image;
    int x1, x2, y1, y2;
    int previousID = 0,nextID = 0,displayStatus = 0;

    /**
     * Creates new form NewJFrame
     */
    public MainFrame() throws IOException {
        initComponents();        
        nextButton.setEnabled(false);
        previousButton.setEnabled(false);
        progressImageDetection.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jFrame2 = new javax.swing.JFrame();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        Arrange = new javax.swing.JFrame();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel24 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jTextField7 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jButton11 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jLabel16 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        precisionSlider = new javax.swing.JSlider();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        progressImageDetection = new javax.swing.JProgressBar();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jPanel4 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jButton7 = new javax.swing.JButton();
        jComboBox2 = new javax.swing.JComboBox();
        jTextField6 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jTextField5 = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        nextButton = new javax.swing.JButton();
        previousButton = new javax.swing.JButton();
        backToResult = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        jLabel3.setText("Name");

        jLabel4.setText("Full Name");

        jLabel5.setText("Relation");

        jLabel6.setText("Phone");

        jButton3.setText("new");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Delete");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("recognize");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jList2.setModel(listModel1);
        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList2MouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(jList2);

        jLabel7.setText("jLabel7");

        jLabel8.setText("jLabel8");

        jLabel9.setText("jLabel9");

        jLabel10.setText("jLabel10");

        jButton9.setText("OK");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addGroup(jFrame1Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel3)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jFrame1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel7))))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton9)
                            .addGroup(jFrame1Layout.createSequentialGroup()
                                .addComponent(jButton3)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5)))
                        .addGap(30, 30, 30)
                        .addComponent(jButton4)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jFrame1Layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jFrame1Layout.createSequentialGroup()
                                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4))
                            .addGroup(jFrame1Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jLabel8)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel9))
                        .addGap(7, 7, 7)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel10))
                .addGap(26, 26, 26)
                .addGroup(jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4)
                    .addComponent(jButton5))
                .addGap(18, 18, 18)
                .addComponent(jButton9)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jLabel11.setText("Name");

        jLabel12.setText("Surname");

        jLabel13.setText("Relation");

        jLabel14.setText("Phone no.");

        jTextField1.setText("jTextField1");

        jTextField2.setText("jTextField2");

        jTextField4.setText("jTextField4");

        jButton6.setText("OK");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "me", "ambivalentOf", "antagonistOf", "apprenticeTo", "childOf", "employedBy", "employerOf", "enemyOf", "grandchildOf", "grandparentOf", "influencedBy", "knowsByReputation", "knowsInPassing", "knowsOf", "mentorOf", "parentOf", "participant", "participantIn", "wouldLikeToKnow", "friendOf", "colleagueOf", "spouseOf", "closeFriendOf", "livesWith", "neighborOf", "siblingOf" }));

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton6)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14))
                .addGap(20, 20, 20)
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField2)
                    .addComponent(jTextField1)
                    .addComponent(jTextField4))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame2Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jFrame2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton6)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "me", "ambivalentOf", "antagonistOf", "apprenticeTo", "childOf", "colleagueOf", "closeFriendOf", "employedBy", "employerOf", "enemyOf", "friendOf", "grandchildOf", "grandparentOf", "influencedBy", "knowsByReputation", "knowsInPassing", "knowsOf", "livesWith", "mentorOf", "neighborOf", "parentOf", "participant", "participantIn", "siblingOf", "spouseOf", "wouldLikeToKnow" }));

        jLabel24.setText("Arrange By");

        jButton10.setText("OK");
        jButton10.setEnabled(false);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jLabel25.setText("Output Path");

        jButton11.setText("Open");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jProgressBar1.setStringPainted(true);

        javax.swing.GroupLayout ArrangeLayout = new javax.swing.GroupLayout(Arrange.getContentPane());
        Arrange.getContentPane().setLayout(ArrangeLayout);
        ArrangeLayout.setHorizontalGroup(
            ArrangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ArrangeLayout.createSequentialGroup()
                .addGroup(ArrangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ArrangeLayout.createSequentialGroup()
                        .addGap(123, 123, 123)
                        .addComponent(jButton10))
                    .addGroup(ArrangeLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(ArrangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(ArrangeLayout.createSequentialGroup()
                                .addGroup(ArrangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel24)
                                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(29, 29, 29)
                                .addGroup(ArrangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jComboBox3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jTextField7))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton11))
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        ArrangeLayout.setVerticalGroup(
            ArrangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ArrangeLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(ArrangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addGap(44, 44, 44)
                .addGroup(ArrangeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(jButton11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton10)
                .addGap(21, 21, 21))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jTabbedPane4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Property", "Value"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable2);

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane6.setViewportView(jTextArea3);

        jLabel16.setText("Desciption");

        jButton8.setText("OK");
        jButton8.setEnabled(false);
        jButton8.setPreferredSize(new java.awt.Dimension(65, 23));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel15.setText("Location");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(36, 36, 36)
                        .addComponent(jTextField3))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane6)
                .addGap(18, 18, 18)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel1MouseReleased(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel1MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        jButton1.setText("Upload");
        jButton1.setToolTipText("Upload a picture");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Detect");
        jButton2.setToolTipText("Detect the faces on the picture");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        precisionSlider.setMaximum(25);
        precisionSlider.setMinimum(1);
        precisionSlider.setValue(10);
        precisionSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                precisionSliderStateChanged(evt);
            }
        });

        jLabel28.setText("7");

        jLabel29.setText("Precision");

        progressImageDetection.setStringPainted(true);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addComponent(progressImageDetection, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel29)
                        .addGap(119, 119, 119)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(precisionSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel28))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(progressImageDetection, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(precisionSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 26, Short.MAX_VALUE))
        );

        jList1.setModel(listModel);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jList1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Annotation", jPanel1);

        jPanel7.setPreferredSize(new java.awt.Dimension(600, 400));

        jLabel18.setPreferredSize(new java.awt.Dimension(200, 190));
        jLabel18.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel18MouseClicked(evt);
            }
        });

        jLabel19.setPreferredSize(new java.awt.Dimension(200, 190));
        jLabel19.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel19MouseClicked(evt);
            }
        });

        jLabel20.setPreferredSize(new java.awt.Dimension(200, 190));
        jLabel20.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel20MouseClicked(evt);
            }
        });

        jLabel21.setPreferredSize(new java.awt.Dimension(200, 190));
        jLabel21.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel21MouseClicked(evt);
            }
        });

        jLabel22.setPreferredSize(new java.awt.Dimension(200, 190));
        jLabel22.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel22MouseClicked(evt);
            }
        });

        jLabel23.setPreferredSize(new java.awt.Dimension(200, 190));
        jLabel23.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel23MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(0, 330, Short.MAX_VALUE)
                    .addComponent(jLabel26)
                    .addGap(0, 331, Short.MAX_VALUE)))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel7Layout.createSequentialGroup()
                    .addGap(0, 206, Short.MAX_VALUE)
                    .addComponent(jLabel26)
                    .addGap(0, 207, Short.MAX_VALUE)))
        );

        jButton7.setText("Search");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ambivalentOf", "antagonistOf", "apprenticeTo", "childOf", "colleagueOf", "closeFriendOf", "employedBy", "employerOf", "enemyOf", "friendOf", "grandchildOf", "grandparentOf", "influencedBy", "knowsByReputation", "knowsInPassing", "knowsOf", "livesWith", "mentorOf", "neighborOf", "parentOf", "participant", "participantIn", "siblingOf", "spouseOf", "wouldLikeToKnow" }));

        jTextField6.setText("Location");

        jTextField5.setText("jTextField5");

        jLabel17.setText("Person");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField5))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jCheckBox2)
                            .addComponent(jCheckBox1))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jButton7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jCheckBox1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox2)
                            .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jButton7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        nextButton.setText(">>");
        nextButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextButtonActionPerformed(evt);
            }
        });

        previousButton.setText("<<");
        previousButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previousButtonActionPerformed(evt);
            }
        });

        backToResult.setText("<< BACK");
        backToResult.setEnabled(false);
        backToResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToResultActionPerformed(evt);
            }
        });

        jLabel27.setText("Description");

        deleteButton.setText("Delete");
        deleteButton.setEnabled(false);
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel27)
                    .addComponent(deleteButton)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel27)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteButton)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(previousButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nextButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backToResult))
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 413, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(previousButton, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nextButton, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backToResult, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane4.addTab("Search", jPanel4);

        jMenu1.setText("File");

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem1.setText("Close");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Manage");

        jMenuItem2.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.ALT_MASK));
        jMenuItem2.setText("Arrange");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 878, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jTabbedPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 586, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int returnVal = 99;
        filechooser = new JFileChooser();
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Images", "jpg", "JPG");
        filechooser.setFileFilter(filter);

        returnVal = filechooser.showDialog(MainFrame.this, "select an image");

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            progressImageDetection.setValue(100);
            jButton2.setEnabled(true);
            jButton8.setEnabled(true);
            
            File file = filechooser.getSelectedFile();
            //Display image and its metadata
            path = file.getAbsolutePath();
            System.out.println(path);

            //copy the uploaded file to imagedb file
            new FileUtil().copyfile(path, "imagedb\\" + filechooser.getName(file));

            filename = filechooser.getName(file);
            path = "imagedb\\" + filechooser.getName(file);
            System.out.println(path);

            ImageIcon img = new ImageIcon(path);
            image = img.getImage();
            Image imageScaled = getScaledImage(img.getImage(), jPanel3.getWidth(), jPanel3.getHeight());

            img = new ImageIcon(imageScaled);
            jLabel1.setIcon(img);

            //extract the metadata of the image
            EXIFMetadataExtractor exif = null;
            try {
                exif = new EXIFMetadataExtractor(new File(path));
                exif.readImageFile(path);

                String attributes[][] = {
                    {"ImageHeight", exif.getImageHeight()},
                    {"ImageWidth", exif.getImageWidth()},
                    {"ImageOriginalDate", new FormattedDate().getDate(exif.getImageOriginalDate())},
                    {"ImageOriginalTime", exif.getImageOriginalTime()},
                    {"ImageOriginalDateTime", exif.getImageOriginalDateTime()},
                    {"FNumber", exif.getFNumber()},
                    {"ImageDigitizedDate", new FormattedDate().getDate(exif.getImageDigitizedDate())},
                    {"ImageDigitizedDateTime", exif.getImageDigitizedDateTime()},
                    {"ImageDigitizedTime", exif.getImageDigitizedTime()},
                    {"FocalLength", exif.getFocalLength()}
                };

                for (int row = 0; row < 10; row++) {
                    for (int col = 0; col < 2; col++) {
                        jTable2.getModel().setValueAt(attributes[row][col], row, col);
                    }
                }
            } catch (JpegProcessingException | MetadataException | IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        jLabel1.setToolTipText(path);
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        FaceDetection face = new FaceDetection(path, "images");
        int precision = precisionSlider.getValue();
        
        jTabbedPane4.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        Region reg[] = face.detectFace(precision);
        progressImageDetection.setValue(100);
        jTabbedPane4.setCursor(Cursor.getDefaultCursor());
        
        regions.removeAllElements();
        for (int i = 0; i < reg.length; i++) {
            regions.add(reg[i]);
        }
        paintImage();
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
//        FaceDetection face = new FaceDetection(path, "images");
//        jList1.getmo
        int index = jList1.locationToIndex(evt.getPoint());
        faceID = index;

        Region region;
        region = regions.get(index);

//        HashMap<String, Integer> map = face.recogniseFace(region);
//
//        Iterator it = map.entrySet().iterator();
//        int ipp = 0;
//        while (it.hasNext()) {
//            Map.Entry mEntry = (Map.Entry) it.next();
////            System.out.println(mEntry.getKey() + " : " + mEntry.getValue());
//
//            jTable1.getModel().setValueAt(mEntry.getKey(), ipp, 0);
//            jTable1.getModel().setValueAt(mEntry.getValue(), ipp, 1);
//            ipp++;
//        }



        Image img = region.toThumbnail(200, 200);
        ImageIcon i = new ImageIcon(img);
        jLabel2.setIcon(i);
        jFrame1.pack();
        jFrame1.setLocationRelativeTo(this);
        jFrame1.setVisible(true);
    }//GEN-LAST:event_jList1MouseClicked

    private void jLabel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MousePressed
        // TODO add your handling code here:
        x1 = evt.getX();
        y1 = evt.getY();
    }//GEN-LAST:event_jLabel1MousePressed

    private void jLabel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseReleased
        // TODO add your handling code here:
        if(path != null) {
            x2 = evt.getX();
            y2 = evt.getY();

            int w, h;
            int width = x1 - x2;
            int height = y1 - y2;

            w = Math.abs(width);
            h = Math.abs(height);

            int centroidX = (x1 + x2) / 2;
            int centroidY = (y1 + y2) / 2;

            regionsManual = new Region(centroidX * image.getWidth(rootPane) / jPanel3.getWidth(),
                    centroidY * image.getHeight(rootPane) / jPanel3.getHeight(),
                    w * image.getWidth(rootPane) / jPanel3.getWidth(),
                    h * image.getHeight(rootPane) / jPanel3.getHeight(), 0.0, path);

            regions.add(regionsManual);

            paintImage();
        }
    }//GEN-LAST:event_jLabel1MouseReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        regions.remove(faceID);
        jFrame1.setVisible(false);
        paintImage();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        Region region;
        region = regions.get(faceID);

        FaceDetection face = new FaceDetection(path, "images");
        HashMap<String, Integer> map = face.recogniseFace(region);

        //sorting the hashmap table
        Map mapSorted = sortByValue(map);

        listModel1.removeAllElements();

        Iterator it = mapSorted.entrySet().iterator();
        int ipp = 0;
        while (it.hasNext()) {
            Map.Entry mEntry = (Map.Entry) it.next();
//            System.out.println(mEntry.getKey() + " : " + mEntry.getValue());

//            jTable1.getModel().setValueAt(mEntry.getKey(), ipp, 0);
//            jTable1.getModel().setValueAt(mEntry.getValue(), ipp, 1);
            String name = (String) mEntry.getKey();
            String photo = (String) mEntry.getKey() + "---->" + mEntry.getValue();
//            MainController.getInstance().getFaceDB().renameAnnotation("rajan", "rajanM");
//            System.out.println(MainController.getInstance().getFaceDB().getKnownFaces().length);
//            System.out.println(MainController.getInstance().getDataDir());
            listModel1.add(ipp, photo);
//            System.out.println(photo);
//            System.out.println(MainController.getInstance().getFaceDB().getRegionsForFace(photo).toString());

//            listModel1.add(ipp, MainController.getInstance().getFaceDB().getRegionsForFace(photo));

            ipp++;
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jList2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseClicked
        // TODO add your handling code here:
        System.out.println(jList2.locationToIndex(evt.getPoint()));
        int a = jList2.locationToIndex(evt.getPoint());
        System.out.println(listModel1.get(a).toString());
        String result[] = listModel1.get(a).toString().split("---->");
        System.out.println(result[0]);

        String relation = null;
        LinkedList<PersonWithRelation> l = SparqlQuery.searchPersonWithPhone("imagedb/rdf", result[0]);
        try {
            String user = FileUtil.getSession();
            relation = SparqlQuery.findRelation("imagedb/rdf/" + "user" + "/" + user + ".rdf", result[0], user);
        } catch (FileNotFoundException ex) {
        } catch (IOException ex) {
        }
        jLabel7.setText(result[0]);
        if(!l.get(0).getPersonFullName().isEmpty()) {
            jLabel8.setText(l.element().getPersonFullName());
        }
        else
            jLabel8.setText("");
        jLabel9.setText(relation);
        if(!l.element().getPersonPhoneNumber().isEmpty()) {
            jLabel10.setText(l.element().getPersonPhoneNumber());
        }
        else
            jLabel10.setText("");
        
    }//GEN-LAST:event_jList2MouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String name = jTextField1.getText().trim().toLowerCase();
        String surName = jTextField2.getText().trim().toLowerCase();
        String relation = (String) jComboBox1.getSelectedItem();
        String phoneNumber = jTextField4.getText().trim();

        FaceDatabase db = new FaceDatabase();
        String path = System.getProperty("user.home") + File.separator + ".faint";
        System.out.println(path);
        try {
            db = new FileUtil().recoverFromDisk(path);
        } catch (IOException ex) {
        }

        System.out.println(db.getKnownFaces().length);

        db.put(regions.get(faceID), name);
        try {
            db.writeToDisk();
        } catch (IOException e) {
        }

        //write in a .rdf file
        WriteRdf w = new WriteRdf();
        String x = regions.get(faceID).getX() + "";
        String y = regions.get(faceID).getY() + "";
        String imageWidth = regions.get(faceID).getWidth() + "";
        String imageHeight = regions.get(faceID).getHeight() + "";
        String rdfImagePath = null;
        String rdfRelationPath = null;
        String currentUser = null;
        try {
            currentUser = new FileUtil().getSession();
            rdfImagePath = "imagedb" + File.separator + "rdf" + File.separator + changeFileExt(filename);
            rdfRelationPath = "imagedb" + File.separator + "rdf" + File.separator + "user" + File.separator + currentUser + ".rdf";
            System.out.println(currentUser);
            System.out.println(rdfImagePath);
            System.out.println(rdfRelationPath);


        } catch (FileNotFoundException ex) {
        } catch (IOException ex) {
        }
        w.writerdf(rdfImagePath, name, surName, x, y, imageWidth, imageHeight, phoneNumber, path);

        w.writerdfR(rdfRelationPath, currentUser, name, relation);


        jFrame2.setVisible(false);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jFrame2.setVisible(true);
        jFrame2.setLocationRelativeTo(null);
        jFrame2.pack();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        String searchedPerson = jTextField5.getText().trim().toLowerCase();
        String relation = null;
        String location = null;
        
        //reset the display area
        list.removeAll(list);
        clearResultScreen();
        
        
        
        if (jCheckBox1.isSelected()) {
            relation = (String) jComboBox2.getSelectedItem();
        }
        if (jCheckBox2.isSelected()) {
            location = jTextField6.getText().trim().toLowerCase();
        }

        if (!searchedPerson.isEmpty()  && !jCheckBox1.isSelected() && !jCheckBox2.isSelected()) {
//            list.removeAll(list);
            list = SparqlQuery.searchPersonThroughDirectory("imagedb/rdf", searchedPerson);
            
            displayStatus = 0;
            displayResult();
            
            
//            for (int i = 0; i < list.size() && i < 6; i++) {
//                if (i == 0) {                    
//                    jLabel18.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
//                }
//                if (i == 1) {
//                    jLabel19.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
//                }
//                if (i == 2) {
//                    jLabel20.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
//                }
//                if (i == 3) {
//                    jLabel21.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
//                }
//                if (i == 4) {
//                    jLabel22.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
//                }
//                if (i == 5) {
//                    jLabel23.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
//                }                
//            }
            //for previous and next button
            if(list.size()>5) {
                nextButton.setEnabled(true);
                previousButton.setEnabled(false);
                nextID = 6;
                displayStatus = 0;
            }
            else{
                nextButton.setEnabled(false);
                previousButton.setEnabled(false);
            }
            
        } else if (!searchedPerson.isEmpty() && jCheckBox1.isSelected() && !jCheckBox2.isSelected()) {
//            list.removeAll(list);
            try {
                
                LinkedList<SearchPersonClass> list2 = SparqlQuery.relateToPerson("imagedb/rdf/"+"user"+"/"+searchedPerson+".rdf", searchedPerson,relation);
                LinkedList<SearchPersonClass> list3 = new LinkedList<>();
                                
                for( int i=0 ; i < list2.size(); i++ ) {
                        list3 = SparqlQuery.searchPersonThroughDirectory("imagedb/rdf", list2.get(i).getFileName());
                        for(int j=0;j<list3.size();j++){
                            String fN = list3.get(j).getFileName(); //FileName
                            String iW = list3.get(j).getImageWidth(); //ImageWidth
                            String iL = list3.get(j).getImageLength(); //ImageLength
                            String w = list3.get(j).getWidth(); //Width
                            String h = list3.get(j).getHeight(); //Height
                            
                            list.add(new SearchPersonClass(fN,iW,iL,h,w));
                            
                        }
                    //}
                }
                displayStatus = 0;
                displayResult();
//                for (int i = 0; i < list.size() && i < 6; i++) {
//                    if (i == 0) {
//                        jLabel18.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
//                    }
//                    if (i == 1) {
//                        jLabel19.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
//                    }
//                    if (i == 2) {
//                        jLabel20.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
//                    }
//                    if (i == 3) {
//                        jLabel21.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
//                    }
//                    if (i == 4) {
//                        jLabel22.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
//                    }
//                    if (i == 5) {
//                        jLabel23.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
//                    }                    
//                }
                
                
            } catch (FileNotFoundException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            //for previous and next button
            if(list.size() > 5) {
                nextButton.setEnabled(true);
                previousButton.setEnabled(false);
                nextID = 6;
                displayStatus = 0;
            }
            else {
                nextButton.setEnabled(false);
                previousButton.setEnabled(false);
            }
            
        } else if (!searchedPerson.isEmpty() && relation.isEmpty() && !location.isEmpty()) {
        } else if (!searchedPerson.isEmpty() && !relation.isEmpty() && !location.isEmpty()) {
        }
        
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        System.exit(1);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        String name = jLabel7.getText().toLowerCase().trim();
        String surName = jLabel8.getText().toLowerCase().toLowerCase();
        String relation = jLabel9.getText();
        String phoneNumber = jLabel10.getText();
        
        //write in faint database
        FaceDatabase db = new FaceDatabase();
        String path = System.getProperty("user.home") + File.separator + ".faint";
        System.out.println(path);
        try {
            db = new FileUtil().recoverFromDisk(path);
        } catch (IOException ex) {
        }

        System.out.println(db.getKnownFaces().length);

        db.put(regions.get(faceID), name);
        try {
            db.writeToDisk();
        } catch (IOException e) {
        }
        
        //write in a .rdf file
        WriteRdf w = new WriteRdf();
        String x = regions.get(faceID).getX() + "";
        String y = regions.get(faceID).getY() + "";
        String imageWidth = regions.get(faceID).getWidth() + "";
        String imageHeight = regions.get(faceID).getHeight() + "";
        System.out.println(regions.get(faceID).getHeight() + "jjjjjjjjjjjjjjjj");
        String rdfImagePath = null;
        String rdfRelationPath = null;
        String currentUser = null;
        try {
            currentUser = new FileUtil().getSession();
            rdfImagePath = "imagedb" + File.separator + "rdf" + File.separator + changeFileExt(filename);
            rdfRelationPath = "imagedb" + File.separator + "rdf" + File.separator + "user" + File.separator + currentUser + ".rdf";
            System.out.println(currentUser);
            System.out.println(rdfImagePath);
            System.out.println(rdfRelationPath);
            //test for pushing don't mind this comment


        } catch (FileNotFoundException ex) {
        } catch (IOException ex) {
        }
        w.writerdf(rdfImagePath, name, surName, x, y, imageWidth, imageHeight, phoneNumber, path);

        w.writerdfR(rdfRelationPath, currentUser, name, relation);
        
        jFrame1.setVisible(false);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        String des =  jTextArea3.getText();
        WriteRdf.writerdfD("imagedb" + File.separator + "rdf" + File.separator + changeFileExt(filename), des, path);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        Arrange.setVisible(true);
        Arrange.setLocationRelativeTo(null);
        Arrange.pack();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void nextButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextButtonActionPerformed
        // TODO add your handling code here:
        disableHandCursor();
        previousButton.setEnabled(true);
        previousID = nextID;       
        
        //display images
        displayStatus += 1;
        displayNextResult();
        
        if((nextID + 6) >= list.size()) {
            nextButton.setEnabled(false);
        }
        nextID = nextID + 6;
    }//GEN-LAST:event_nextButtonActionPerformed

    private void previousButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previousButtonActionPerformed
        // TODO add your handling code here:
        disableHandCursor();
        nextButton.setEnabled(true);
        nextID = previousID;
        
        //display images
        displayStatus -= 1;
        displayPreviousResult();
        
        if((previousID - 6) <= 0) {
            previousButton.setEnabled(false);
        }
        
        previousID = previousID - 6;
    }//GEN-LAST:event_previousButtonActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser = new JFileChooser();
        jFileChooser.setVisible(true);
        
        jFileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jFileChooser.setAcceptAllFileFilterUsed(false);
        if(jFileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
            File location = jFileChooser.getSelectedFile();
            jTextField7.setText(location.getAbsolutePath());
            jButton10.setEnabled(true);
        }
        
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        String optionList = (String) jComboBox3.getSelectedItem();
        int progressValue = 0;
        int initialValue = 0;
        String finalLocation = null; //yesma rakhna baaki cha
        finalLocation = jTextField7.getText()+File.separator;
            switch (optionList) {
                case "me":
                    try {
                        String session = FileUtil.getSession();
                        LinkedList<SearchPersonClass> selectedList = SparqlQuery.searchPersonThroughDirectory("imagedb/rdf", session);

                        if (selectedList.size() > 0) {
                            progressValue = (100 / selectedList.size());
                        }
                        for (int i = 0; i < selectedList.size(); i++) {
                            FileUtil.copyfile(selectedList.get(i).getFileName(),finalLocation+selectedList.get(i).getFileName().substring(8));
                            initialValue += progressValue;
                            jProgressBar1.setValue(initialValue);
                        }

                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }


                case "Date":


                default:
                    try {
                        String session = FileUtil.getSession();
                        LinkedList<SearchPersonClass> relatedPersons = SparqlQuery.relateToPerson("imagedb/rdf/" + "user" + "/" + session + ".rdf", session, optionList);
                        
                        for (int i = 0; i < relatedPersons.size(); i++) {
                        
                            LinkedList<SearchPersonClass> RDFOfListedPerson = SparqlQuery.searchPersonThroughDirectory("imagedb/rdf", relatedPersons.get(i).getFileName());
                            for (int j = 0; j < RDFOfListedPerson.size(); j++) {
                            
                                FileUtil.copyfile(RDFOfListedPerson.get(j).getFileName(),finalLocation+RDFOfListedPerson.get(j).getFileName().substring(8));
                                initialValue += progressValue;
                                jProgressBar1.setValue(initialValue);
                            }
                        }

                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (IOException ex) {
                        Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }

            }
            jButton10.setEnabled(false);
            jProgressBar1.setValue(0);
            Arrange.setVisible(false);
    }//GEN-LAST:event_jButton10ActionPerformed

    private void precisionSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_precisionSliderStateChanged
        // TODO add your handling code here:
        String precision = String.valueOf(precisionSlider.getValue());
        jLabel28.setText(precision);
    }//GEN-LAST:event_precisionSliderStateChanged

    private void jLabel18MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel18MouseClicked
        // TODO add your handling code here:        
        clearResultScreen();
        jLabel26.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(displayStatus*6 + 0).getFileName()).getImage(), 600, 400)));
        nextButton.setVisible(false);
        previousButton.setVisible(false);        
        backToResult.setEnabled(true);
        disableHandCursor();
        paintThumbnail(displayStatus * 6 + 0);
    }//GEN-LAST:event_jLabel18MouseClicked

    private void backToResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToResultActionPerformed
        // TODO add your handling code here:
        jLabel26.setIcon(null);
        displayResult();
        nextButton.setVisible(true);
        previousButton.setVisible(true);
        backToResult.setEnabled(false);
    }//GEN-LAST:event_backToResultActionPerformed

    private void jLabel19MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel19MouseClicked
        // TODO add your handling code here:
        if((displayStatus*6 + 1) < list.size()) {
            clearResultScreen();
            jLabel26.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(displayStatus*6 + 1).getFileName()).getImage(), 600, 400)));
            nextButton.setVisible(false);
            previousButton.setVisible(false);
            backToResult.setEnabled(true);
            disableHandCursor();
            paintThumbnail(displayStatus * 6 + 1);
        }
    }//GEN-LAST:event_jLabel19MouseClicked

    private void jLabel20MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel20MouseClicked
        // TODO add your handling code here:
        if((displayStatus*6 + 2) < list.size()) {
            clearResultScreen();
            jLabel26.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(displayStatus*6 + 2).getFileName()).getImage(), 600, 400)));
            nextButton.setVisible(false);
            previousButton.setVisible(false);
            backToResult.setEnabled(true);
            disableHandCursor();
        }
    }//GEN-LAST:event_jLabel20MouseClicked

    private void jLabel21MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel21MouseClicked
        // TODO add your handling code here:
        if((displayStatus*6 + 3) < list.size()) {
            clearResultScreen();
            jLabel26.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(displayStatus*6 + 3).getFileName()).getImage(), 600, 400)));
            nextButton.setVisible(false);
            previousButton.setVisible(false);
            backToResult.setEnabled(true);
            disableHandCursor();
        }
    }//GEN-LAST:event_jLabel21MouseClicked

    private void jLabel22MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel22MouseClicked
        // TODO add your handling code here:
        if((displayStatus*6 + 4) < list.size()) {
            clearResultScreen();
            jLabel26.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(displayStatus*6 + 4).getFileName()).getImage(), 600, 400)));
            nextButton.setVisible(false);
            previousButton.setVisible(false);
            backToResult.setEnabled(true);
            disableHandCursor();
        }
    }//GEN-LAST:event_jLabel22MouseClicked

    private void jLabel23MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel23MouseClicked
        // TODO add your handling code here:
        if((displayStatus*6 + 5) < list.size()) {
            clearResultScreen();
            jLabel26.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(displayStatus*6 + 5).getFileName()).getImage(), 600, 400)));
            nextButton.setVisible(false);
            previousButton.setVisible(false);
            backToResult.setEnabled(true);
            disableHandCursor();
        }
    }//GEN-LAST:event_jLabel23MouseClicked

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        //delete from faint database
        //delete all the photo and rdfs
        deleteButton.setEnabled(false);
    }//GEN-LAST:event_deleteButtonActionPerformed

    private Image getScaledImage(Image srcImg, int width, int height) {
        BufferedImage resizedImg = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D g2 = resizedImg.createGraphics();
        g2.setRenderingHint(RenderingHints.KEY_INTERPOLATION, RenderingHints.VALUE_INTERPOLATION_BICUBIC);
        g2.drawImage(srcImg, 0, 0, width, height, null);
        g2.dispose();
        return resizedImg;
    }

    private static String changeFileExt(String str) {
        String string[] = null;

        if (str.contains(".jpg")) {
            string = str.split(".jpg");
        } else {
            string = str.split(".JPG");
        }

        System.out.println(string.length);
        string[0] = string[0] + ".rdf";
        return string[0];
    }

    private void paintImage() {
        if(regions.size() > 0) {
        listModel.removeAllElements();
        ImageIcon imag = new ImageIcon(path);
        image = imag.getImage();
        Image imageScaled = getScaledImage(imag.getImage(), jPanel3.getWidth(), jPanel3.getHeight());

        imag = new ImageIcon(imageScaled);
        jLabel1.setIcon(imag);
        for (int i = 0; i < regions.size(); i++) {
            Region region = regions.get(i);
            Image img = region.toThumbnail(75, 75);

            listModel.add(i, new ImageIcon(img));

            //display rect on the detected faces
            Icon iconTemp = jLabel1.getIcon();
            BufferedImage Temp = new BufferedImage(jPanel3.getWidth(),
                    jPanel3.getHeight(), BufferedImage.TYPE_INT_ARGB);
            Graphics2D gTemp = Temp.createGraphics();
            iconTemp.paintIcon(null, gTemp, 0, 0);
            gTemp.drawRect((region.getX() - region.getWidth() / 2) * jPanel3.getWidth() / image.getWidth(rootPane),
                    (region.getY() - region.getHeight() / 2) * jPanel3.getHeight() / image.getHeight(rootPane),
                    region.getWidth() * jPanel3.getWidth() / image.getWidth(rootPane),
                    region.getHeight() * jPanel3.getHeight() / image.getHeight(rootPane));
            jLabel1.setIcon(new ImageIcon(Temp));
            gTemp.dispose();
        }
        }
    }
    
    private void paintThumbnail(int i) {
        //display rect on the detected faces
            Icon iconTemp = jLabel26.getIcon();
            
            BufferedImage Temp = new BufferedImage(600, 400, BufferedImage.TYPE_INT_ARGB);
            Graphics2D gTemp = Temp.createGraphics();
            iconTemp.paintIcon(null, gTemp, 0, 0);
            
            //finding point of the rectangle
            int width = Integer.parseInt(list.get(i).getWidth());
            int height = Integer.parseInt(list.get(i).getHeight());
            int imageWidth = Integer.parseInt(list.get(i).getImageWidth());
            int imageHeight = Integer.parseInt(list.get(i).getImageLength());
            String filePath = list.get(i).getFileName();
            Image image = new ImageIcon(filePath).getImage();
            System.out.println(image.getWidth(rootPane));
            System.out.println(image.getHeight(rootPane));
            System.out.println(width);
            System.out.println(height);
            gTemp.drawRect((width - imageWidth / 2) * 600 / image.getWidth(rootPane),
                    (height - imageHeight / 2) * 400 / image.getHeight(rootPane),
                    imageWidth * 600 / image.getWidth(rootPane),
                    imageHeight * 400 / image.getHeight(rootPane));
            jLabel26.setIcon(new ImageIcon(Temp));
            gTemp.dispose();
            
            //display the description on the side
            String p = list.get(i).getFileName();
            String pSubString = p.substring(8);
            p = changeFileExt(pSubString);
            String des = null;
        try {
            des = SparqlQuery.DescriptionExtractor("imagedb/rdf/"+p);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
            jTextArea1.setText(des);
            deleteButton.setEnabled(true);
    }

    public static <K, V extends Comparable<? super V>> Map<K, V> sortByValue(Map<K, V> map) {
        List<Map.Entry<K, V>> list =
                new LinkedList<Map.Entry<K, V>>(map.entrySet());
        Collections.sort(list, new Comparator<Map.Entry<K, V>>() {

            public int compare(Map.Entry<K, V> o1, Map.Entry<K, V> o2) {
                return (o1.getValue()).compareTo(o2.getValue());
            }
        });

        Map<K, V> result = new LinkedHashMap<K, V>();
        for (Map.Entry<K, V> entry : list) {
            result.put(entry.getKey(), entry.getValue());
        }
        return result;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel("com.jtattoo.plaf.fast.FastLookAndFeel");
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                try {
                    new MainFrame().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFrame Arrange;
    private javax.swing.JButton backToResult;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList1;
    private javax.swing.JList jList2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JButton nextButton;
    private javax.swing.JSlider precisionSlider;
    private javax.swing.JButton previousButton;
    private javax.swing.JProgressBar progressImageDetection;
    // End of variables declaration//GEN-END:variables
    JFileChooser filechooser = null;
    DefaultListModel listModel = new DefaultListModel();
    DefaultListModel listModel1 = new DefaultListModel();

    private void displayResult() {
        for (int i = displayStatus *6; i < list.size() && i<(displayStatus*6+6) ; i++) {
                if (i == displayStatus *6+0) {
                    jLabel18.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                    jLabel18.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
                }
                if (i == displayStatus *6+1) {
                    jLabel19.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                    jLabel19.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
                }
                if (i == displayStatus *6+2) {
                    jLabel20.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                    jLabel20.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
                }
                if (i == displayStatus *6+3) {
                    jLabel21.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                    jLabel21.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
                }
                if (i == displayStatus *6+4) {
                    jLabel22.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                    jLabel22.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
                }
                if (i == displayStatus *6+5) {
                    jLabel23.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                    jLabel23.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
                }
        }
    }
    
    private void displayNextResult() {
    
        clearResultScreen();
        for (int i = nextID; i < list.size() && i < (nextID+6); i++) {

            if (i == nextID + 0) {
                jLabel18.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                jLabel18.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
            }
            if (i == nextID + 1) {                
                jLabel19.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                jLabel19.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
            }
            if (i == nextID + 2) {
                jLabel20.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                jLabel20.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
            }
            if (i == nextID + 3) {
                jLabel21.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                jLabel21.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
            }
            if (i == nextID + 4) {
                jLabel22.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                jLabel22.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
            }
            if (i == nextID + 5) {
                jLabel23.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                jLabel23.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
            }   
        
        }
    }
    
    private void clearResultScreen() {
        jLabel18.setIcon(null);
        jLabel19.setIcon(null);
        jLabel20.setIcon(null);
        jLabel21.setIcon(null);
        jLabel22.setIcon(null);
        jLabel23.setIcon(null);
    }
    
    private void disableHandCursor() {
        jLabel18.setCursor(Cursor.getDefaultCursor());
        jLabel19.setCursor(Cursor.getDefaultCursor());
        jLabel20.setCursor(Cursor.getDefaultCursor());
        jLabel21.setCursor(Cursor.getDefaultCursor());
        jLabel22.setCursor(Cursor.getDefaultCursor());
        jLabel23.setCursor(Cursor.getDefaultCursor());
    }

    private void displayPreviousResult() {
        clearResultScreen();
        for (int i = previousID - 6; i < previousID; i++) {
            
            if (i == previousID - 6 + 0) {
                jLabel18.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                jLabel18.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
            }
            if (i == previousID - 6 + 1) {
                jLabel19.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                jLabel19.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
            }
            if (i == previousID - 6 + 2) {
                jLabel20.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                jLabel20.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
            }
            if (i == previousID - 6 + 3) {
                jLabel21.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                jLabel21.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
            }
            if (i == previousID - 6 + 4) {
                jLabel22.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                jLabel22.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
            }
            if (i == previousID - 6 + 5) {
                jLabel23.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
                jLabel23.setIcon(new ImageIcon(getScaledImage(new ImageIcon(list.get(i).getFileName()).getImage(), 200, 180)));
            }
        }
    }
}
